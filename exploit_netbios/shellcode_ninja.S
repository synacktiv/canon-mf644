#include "target.h"
.set ipaddr, 0xefbeadde @ sin_addr to be patched
.set ipport, 0x2823     @ sin_port = htons(9000)
@.set readsz, 0x119400
.set readsz, 0x3
.text
.global _start

_start:
    .code 32

    @ calling netSocket(1, 1, 0, 0)
    MOV  R0, #1           @ domain
    MOV  R1, #1           @ type
    MOV  R2, #0           @ protocol
    MOV  R3, #0           @ ensure last param is 0
    LDR  R4, =netSocket
    BLX  R4

    LDR  R1, =sockfd
    STR  R0, [R1]

    @ struct sockaddr_in {
    @     short            sin_family;   // 0x100
    @     unsigned short   sin_port;     // htons(9000)
    @     struct in_addr   sin_addr;     // htonl(0xc0a80b03) -> 192.168.11.3
    @ };

    @ calling netConnect(sockfd, &addr, 8)
    LDR  R1, =ipaddr      @ sin_addr
    STR  R1, [SP, #4]
    MOVW R1, #ipport      @ sin_port
    STRH R1, [SP, #2]
    MOV  R1, #0x100       @ sin_family = AF_INET
    STRH R1, [SP, #0]
    MOV  R1, SP           @ load sockaddr from stack

    MOV  R2, #8           @ load addrlen
    MOV  R3, #0           @ ensure last param is 0
    LDR  R4, =netConnect
    BLX  R4

_new:
    LDR  R5, =fb_start
    LDR  R6, =fb_stop

_loop:
    @ calling netRecv(sockfd, buff, readsz, 0)
    LDR  R0, =sockfd
    LDR  R0, [R0]
    MOV  R1, R5
    @MOVW R2, #readsz
    MOV  R2, #readsz
    MOV  R3, #0
    LDR  R4, =netRecv
    BLX  R4
@    CMP  R0, #0
@    BLE  _start

_next_pixel:
@    ADD  R5, R0 @ #readsz
    ADD  R5, #readsz
    CMP  R5, R6
    BLT  _loop

@_next_frame:
     LDR R5, =fb_start
     LDR R1, =sedev_powerOnImgSns
     BLX R1
     B _loop
@    @ calling wake()
@    LDR  R1, =wake
@    BLX  R1
@    B    _new
